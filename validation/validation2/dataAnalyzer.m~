clf;
clear all;
clc;

%loading data generated by the app, these data are recorded at a sample rate of 44100
%samples per second. In other words, for every second, there are 44100 points,
%and a 10 second audio will have 441,000 points. Also, the app uses dual
%channel, and we are only useing the left channel. 
data = csvread('Random_Noise.csv');

%flipping the amplitude about the x-axis to match the matlab generated data
data = data*-1;
%loading an audio file recorded by macbook pro microphone. We can use any
%microphone of our choice as a refrence, and calibrate our obtained data.

% I use 'info' to find sameple rate and other info. 
info = audioinfo('Random_Noise.m4a');
[y,Fs] = audioread('Random_Noise.m4a');

%Macbook's  microphone is a quad channel, and we will use only one of the channels.
y = y(:,2);

%play the sound
% sound(y,Fs)


% Making appropriate x-axis in seconds
t = 0:seconds(1/Fs):seconds(info.Duration);
t = t(1:end-1);

%plotting
figure(1)
subplot(2,1,1);
hold on
xlabel('Time')
ylabel('Audio Signal')
plot(t(1:50000),y(1:50000),'x-r')
plot(t(1:50000),data(1:50000),'+-b')
legend('MATLAB Generated Data, source: Audio File Rec by Macbook Pro 2017','App Generated Data, source: Audio File Rec by iPhone 6')
hold off
title('Plotting the entire spectrogram')

subplot(2,1,2);
hold on
xlabel('Time')
ylabel('Audio Signal')
plot(t(500:550),y(500:550),'x-r')
plot(t(500:5),data(1:50000),'+-b')
legend('MATLAB Generated Data, source: Audio File Rec by Macbook Pro 2017','App Generated Data, source: Audio File Rec by iPhone 6')
hold off
title('Plotting part of the spectrogram')

